{"version":3,"file":"index.umd.js","sources":["../src/emoji-picker.ts"],"sourcesContent":["import { Node } from \"@tiptap/core\";\nimport Heading from \"@tiptap/extension-heading\";\nimport { Plugin, PluginKey, TextSelection } from \"prosemirror-state\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport interface AnchorHeadingOptions {\n  levels?: number[];\n  onUpdate?: (anchors: string[]) => void;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    anchorHeading: {\n      /**\n       * Focus on a heading by its anchor.\n       */\n      focusAnchor: (anchor: string) => ReturnType;\n    };\n  }\n}\n\nexport const AnchorHeading = Heading.extend<AnchorHeadingOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      onUpdate: () => {},\n    };\n  },\n\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      anchor: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"data-anchor\"),\n        renderHTML: (attributes) => {\n          if (!attributes.anchor) {\n            return {};\n          }\n          return {\n            \"data-anchor\": attributes.anchor,\n          };\n        },\n      },\n    };\n  },\n\n  addCommands() {\n    return {\n      ...this.parent?.(),\n      focusAnchor:\n        (anchor) =>\n        ({ state, dispatch, view }) => {\n          const { doc } = state;\n          let pos: number | null = null;\n          doc.descendants((node, position) => {\n            if (node.type.name === this.name && node.attrs.anchor === anchor) {\n              pos = position + 1;\n              return false; // Stop iteration\n            }\n          });\n          if (pos !== null) {\n            view.focus();\n            view.dispatch(\n              state.tr.setSelection(TextSelection.create(state.doc, pos)).scrollIntoView()\n            );\n\n            return true;\n          }\n          return false;\n        },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    let previousAnchors: string[] = [];\n    return [\n      // Plugin to auto-generate unique anchors\n      new Plugin({\n        key: new PluginKey(\"autoOutlinePlugin\"),\n        appendTransaction: (transactions, oldState, newState) => {\n          let tr = newState.tr;\n          let modified = false;\n          const anchorsSeen = new Set<string>();\n\n          newState.doc.descendants((node, pos) => {\n            if (node.type.name === this.name) {\n              let anchor = node.attrs.anchor;\n              if (!anchor || anchorsSeen.has(anchor)) {\n                // If no anchor or duplicate anchor, generate a new one\n                anchor = uuidv4();\n                tr = tr.setNodeMarkup(pos, undefined, {\n                  ...node.attrs,\n                  anchor,\n                });\n                modified = true;\n              }\n              anchorsSeen.add(anchor);\n            }\n          });\n\n          if (modified) {\n            return tr;\n          }\n        },\n      }),\n      // Plugin to handle anchor updates\n      new Plugin({\n        key: new PluginKey(\"outlineUpdatePlugin\"),\n        view: () => {\n          return {\n            update: (view, prevState) => {\n              const { state } = view;\n              if (prevState.doc.eq(state.doc)) {\n                return;\n              }\n              const anchors: string[] = [];\n              state.doc.descendants((node) => {\n                if (node.type.name === this.name && node.attrs.anchor) {\n                  anchors.push(node.attrs.anchor);\n                }\n              });\n              if (JSON.stringify(anchors) !== JSON.stringify(previousAnchors)) {\n                previousAnchors = anchors;\n                if (this.options.onUpdate) {\n                  this.options.onUpdate(anchors);\n                }\n              }\n            },\n          };\n        },\n      }),\n    ];\n  },\n});\n"],"names":["TextSelection","Plugin","PluginKey","uuidv4"],"mappings":"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"}